GIT instructions for interns 
(для установки Git локально можно воспользоваться инструкцией https://github.com/git-guides/install-git)
Далее инструкция для внутреннего контура
1. Создание репозитория https: //bitbucket.int...
	"Create repository" button
	Name new repo, add description, create repo
2. Конфигурация + Клонирование репозитория
	Открыть локальную директорию, в которой будет храниться удаленный репозиторий
	(например, C:\Users\gp94\PycharmProjects)
	Вызвать Git Bash из этой директории
	Запустить в терминале (Git Bash) команды
	при первом запуске (если уже делали эту конфигурацию - переходить к следующему шагу):
	Символ $ - указыват на запуск из терминала. В самом терминале символ $ вводить не нужно (то есть комманды начинать со слова git...).
$ git config --global user.name "<ФИО>"
$ git config --global user.email "<v@gaznk.ru>"
	Клонирование git clone https ://bitbucket.int.ga
	После указанных действий в локальной директории появляется папка с данными из удаленного репозитория (вначале пустая)
3. Делаем commit (сохранение локально)
	Создаем файл (или копируем из другого места) в локальном репозитории
	Запускаем Git Bash из локального репозитория. (либо перезапуск из папки либо командой $ cd <directory>)
	Проверяем состояние локального репозитория: $ git status
	Видим, что новые файлы еще не отслеживаются
	Добавляем их (-A - для всех файлов, либо название файла) в область stage для отслеживания:
	$ git add -A
	Видим, что файлы отслеживаются и их можно коммитить (фиксировать) в локальном репозитории
	Делаем commit (-a - для всех файлов): $ git commit -a
	Далее выводится окно, в котором можно дать комментарии к коммиту. Для этого:
	Нажимаем на клавиатуре "i" (что значит insert)
	После этого в первой строке кратко! пишем описание коммита - какое изменение произошло:
	Нажимаем Esc на клавиатуре. (Выходим из режима добавления комментария)
	Печатаем с клавиатуры ":x!" (Выходим из окна) )
	Коммит сделан. Данные сохранены в локальном репозитории.
4. Делаем Push (отправка в удаленный репозиторий)
	Выполняем команду $ git push
	Push сделан. Проверяем данные в удаленном репозитории (в ветке master):
		https://bitbucket.int.gazprombank.ru/scm/dtl/dadm_intern.git
___________________________________________________________
Создание ветки, Pull Request, Merge

5. Создание ветки
	В удаленном репозитории DADM_INTERN нажимаем на три точки (...) около ветки master
	Выбираем "create branch from here"
	Называем ветку (желательно как задача в Jira, например, OPALAB-8823). Создаем ветку.
6. Обнаружение ветки в локальном репозитории
	В Git Bash можем выполнить две команды
	$ git fetch (- просто посмотреть изменения в удаленном репозитории)
	или $ git pull (- забрать данные из удаленного репозитория)
	Заберем данные командой $ git pull
	Проверим наличие веток:
	$ git branch
	Видим, что мы на master ветке (звездочка * напротив master).
	Сменим ветку для работы на ней:
	$ git switch OB-823
	Проверяем, что мы на новой ветке:
	$ git branch (видим звездочку * напротив новой ветки)
7. Делаем изменения в файлах в новой ветке
	Изменяем даынне в файле с кодом\текстом
8. Commit + Push
	Делаем пункты 3, 4 текущей инструкции.
9. Pull Request
	Заходим на удаленный репозиторий (который клонировали)
	На левой панели нажимаем pull request. Затем - create pull request.
	Выбираем какую ветку (на которой работали) и куда (master/main) хотим соединить.
	Нажимаем Continue
	Назначаем reviewer при необходимости (тот кто проверяет код)
	Нажимает Create
10. Merge
	Далее если не было reviewer - в правом верхнем углу нажимаем merge
	Добавляем комментарии при необходимости. Нажимаем Merge
	Если был reviewer - слияение веток (merge) делает он после проверки.
	Видим статус pull request'a - merged